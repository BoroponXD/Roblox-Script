--AutoCollect Items Script (First Release)
--Here's 3 Function only
local cloneref = cloneref or function(o) return o end
COREGUI = cloneref(game:GetService("CoreGui"))
Players = cloneref(game:GetService("Players"))
PlaceId, JobId = game.PlaceId, game.JobId
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local VirtualInputManager = game:GetService("VirtualInputManager")
local player = Players.LocalPlayer
local playerGui = player:FindFirstChild("PlayerGui")

if playerGui then
    local interface = playerGui:FindFirstChild("Interface")
    if interface then
        local framesToRemove = {"BlackMarket", "Crafting", "LikeRewards"}
        
        for _, frameName in ipairs(framesToRemove) do
            local frame = interface:FindFirstChild(frameName)
            if frame then
                frame:Destroy()
                print("Deleted Frame: " .. frameName)
            end
        end
    else
        warn("InterFace not found in PlayerGui")
    end
else
    warn("PlayerGui haven't found")
end

local function saveSettings()
    if writefile then
        local settings = {
            AutoCollect_Enabled = _G.AutoCollect_Enabled,
            AutoFly_Enabled = _G.AutoFly_Enabled,
            Noclip_Enabled = _G.Noclip_Enabled,
            AutoRejoin_Enabled = _G.AutoRejoin_Enabled
        }
        local encodedSettings = game:GetService("HttpService"):JSONEncode(settings)
        writefile("autocollect_settings.json", encodedSettings)
    end
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 250, 0, 360)
Frame.Position = UDim2.new(1, -270, 0.5, -160)
Frame.BackgroundColor3 = Color3.new(0, 0, 0)
Frame.BackgroundTransparency = 0.4
Frame.BorderSizePixel = 2
Frame.Active = true
Frame.Draggable = true

local Title = Instance.new("TextLabel", Frame)
Title.Size = UDim2.new(1, 0, 0.1, 0)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "Jule's AutoCollect"
Title.TextScaled = true
Title.TextColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.SourceSansBold

local Credits = Instance.new("TextLabel", Frame)
Credits.Size = UDim2.new(1, 0, 0.1, 0)
Credits.Position = UDim2.new(0, 0, 0.09, 0)
Credits.Text = "Credits: Boro\nFollow me on Roblox: BoroponXD"
Credits.TextScaled = true
Credits.TextColor3 = Color3.fromRGB(200, 200, 200)
Credits.BackgroundTransparency = 1
Credits.Font = Enum.Font.SourceSans

local Necessary = Instance.new("TextLabel", Frame)
Necessary.Size = UDim2.new(1, 0, 0.1, 0)
Necessary.Position = UDim2.new(0, 0, 0.69, 0)
Necessary.Text = "\n|\nNecessary for AutoFly"
Necessary.TextScaled = true
Necessary.TextColor3 = Color3.fromRGB(200, 200, 200)
Necessary.BackgroundTransparency = 1
Necessary.Font = Enum.Font.SourceSansBold

local function createButton(parent, text, posY, toggleVar)
    local button = Instance.new("TextButton", parent)
    button.Size = UDim2.new(0.8, 0, 0.1, 0)
    button.Position = UDim2.new(0.1, 0, posY, 0)
    button.Text = text .. ": OFF"
    button.TextColor3 = Color3.new(1, 1, 1)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.BackgroundTransparency = 0.2
    button.BorderSizePixel = 2

    button.MouseButton1Click:Connect(function()
        _G[toggleVar] = not _G[toggleVar]
        button.Text = text .. ": " .. (_G[toggleVar] and "ON" or "OFF")
        
        saveSettings()
    end)

    return button
end

local AutoCollectButton = createButton(Frame, "AutoCollect", 0.35, "AutoCollect_Enabled")
local AutoFlyButton = createButton(Frame, "AutoFly", 0.48, "AutoFly_Enabled")
local NoclipButton = createButton(Frame, "Noclip", 0.61, "Noclip_Enabled")
local AutoRejoinButton = createButton(Frame, "AutoRejoin", 0.8, "AutoRejoin_Enabled")

local AllFunctionsButton = Instance.new("TextButton", Frame)
AllFunctionsButton.Size = UDim2.new(0.8, 0, 0.1, 0)
AllFunctionsButton.Position = UDim2.new(0.1, 0, 0.2, 0)
AllFunctionsButton.Text = "Toggle All"
AllFunctionsButton.TextColor3 = Color3.new(1, 1, 1)
AllFunctionsButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
AllFunctionsButton.BackgroundTransparency = 0.2
AllFunctionsButton.BorderSizePixel = 2

AllFunctionsButton.MouseButton1Click:Connect(function()
    local newState = not (_G.AutoCollect_Enabled or _G.AutoFly_Enabled or _G.Noclip_Enabled)

    _G.AutoCollect_Enabled = newState
    _G.AutoFly_Enabled = newState
    _G.Noclip_Enabled = newState
    _G.AutoRejoin_Enabled = newState

    AutoCollectButton.Text = "AutoCollect: " .. (newState and "ON" or "OFF")
    AutoFlyButton.Text = "AutoFly: " .. (newState and "ON" or "OFF")
    NoclipButton.Text = "Noclip: " .. (newState and "ON" or "OFF")
    AutoRejoinButton.Text = "AutoRejoin: " .. (newState and "ON" or "OFF")
    AllFunctionsButton.Text = "Toggle All"

	saveSettings()
end)

local function loadSettings()
    if readfile then
        local filePath = "autocollect_settings.json"
        if isfile(filePath) then
            local settingsData = readfile(filePath)
            local settings = game:GetService("HttpService"):JSONDecode(settingsData)
            
            _G.AutoCollect_Enabled = settings.AutoCollect_Enabled or false
            _G.AutoFly_Enabled = settings.AutoFly_Enabled or false
            _G.Noclip_Enabled = settings.Noclip_Enabled or false
            _G.AutoRejoin_Enabled = settings.AutoRejoin_Enabled or false

            AutoCollectButton.Text = "AutoCollect: " .. (_G.AutoCollect_Enabled and "ON" or "OFF")
            AutoFlyButton.Text = "AutoFly: " .. (_G.AutoFly_Enabled and "ON" or "OFF")
            NoclipButton.Text = "Noclip: " .. (_G.Noclip_Enabled and "ON" or "OFF")
            AutoRejoinButton.Text = "AutoRejoin: " .. (_G.AutoRejoin_Enabled and "ON" or "OFF")
        end
    end
end

loadSettings()

local lastRejoinAttempt = 0

local function checkPotionsAndRejoin()
    while true do
        task.wait(5)
        if _G.AutoRejoin_Enabled then
            local currentTime = tick()
            local potionsFolder = workspace:FindFirstChild("Game") and workspace.Game:FindFirstChild("Potions")
            if potionsFolder then
                local neededPotions = {"Gem", "lucky_potion", "speed_potion", "ultimate_potion"}
                local missing = true
                for _, potion in ipairs(neededPotions) do
                    if potionsFolder:FindFirstChild(potion) then
                        missing = false
                        break
                    end
                end
                if missing and (currentTime - lastRejoinAttempt >= 5) then
                    if #Players:GetPlayers() <= 1 then
                    Players.LocalPlayer:Kick("\nRejoining...")
                    wait(0.1)
                    TeleportService:Teleport(PlaceId, Players.LocalPlayer)
                else
                    TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)  -- если больше 1 игрока, то перезагружаем в ту же инстанцию
                end
				end
			end
		end
	end
end

spawn(checkPotionsAndRejoin)

game:GetService("RunService").Stepped:Connect(function()
    if _G.Noclip_Enabled then
        for _, part in pairs(Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

local function autoActivatePrompt()
    while true do
        task.wait(0.000001)
        if _G.AutoCollect_Enabled then
            for _, prompt in ipairs(workspace:GetDescendants()) do
                if prompt:IsA("ProximityPrompt") and prompt.Enabled then
                    prompt:InputHoldBegin()
                    task.wait(0.000001)
                    prompt:InputHoldEnd()
                end
            end
        end
    end
end

local function autoFlyToObject()
    while true do
        task.wait(0.1)
        if _G.AutoFly_Enabled then
            local trackedNames = {"Gem", "luck_potion", "speed_potion", "ultimate_potion"}
            local nearestObj = nil
            local nearestDist = math.huge

            for _, obj in ipairs(workspace:GetDescendants()) do
                if obj:IsA("Model") and table.find(trackedNames, obj.Name) then
                    local part = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
                    if part then
                        local dist = (LocalPlayer.Character.HumanoidRootPart.Position - part.Position).Magnitude
                        if dist < nearestDist then
                            nearestDist = dist
                            nearestObj = part
                        end
                    end
                end
            end

            if nearestObj then
                local char = LocalPlayer.Character
                if char and char:FindFirstChild("HumanoidRootPart") then
                    local hrp = char.HumanoidRootPart
                    local targetPos = nearestObj.Position + Vector3.new(0, 2, 0)
                    local direction = (targetPos - hrp.Position).unit
                    local speed = 140

                    local bodyVelocity = Instance.new("BodyVelocity")
                    bodyVelocity.Velocity = direction * speed
                    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                    bodyVelocity.Parent = hrp

                    while (hrp.Position - targetPos).Magnitude > 3 and _G.AutoFly_Enabled do
                        task.wait()
                    end

                    bodyVelocity:Destroy()
                end
            end
        end
    end
end

task.spawn(autoActivatePrompt)
task.spawn(autoFlyToObject)
